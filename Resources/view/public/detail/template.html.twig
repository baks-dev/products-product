{# @var card \BaksDev\Products\Product\Repository\ProductDetailByValue\ProductDetailByValueResult #}

{% extends Template('/user/base.html.twig') %}

{% if card.productImagesSortByRoot is not null %}
    {% set photos = card.productImagesSortByRoot %}
{% else %}
    {% set photos = ['/assets/img/blank.svg'] %}
{% endif %}


{% set Price = card.productPrice %}



{% block title %}
    {{ card.productName }}

    {{ card.productVariationValue|call_twig_func(card.productVariationReference~'_render')
    ~ card.productModificationValue|call_twig_func(card.productModificationReference~'_render') }}

    {{ card.productOfferValue|call_twig_func(card.productOfferReference~'_render') }}

    {{ (card.productModificationPostfix ?: card.productVariationPostfix ?: card.productOfferPostfix ?: null )|replace({ '/': '-' }) }}

{% endblock %}

{% block meta %}
    <script type="application/ld+json">
        {
        "@context": "https://schema.org",
        "@type": "Product",
        "name": "{{ card.productName }}
         {{ card.productVariationValue|call_twig_func(card.productVariationReference~'_render')
        ~ card.productModificationValue|call_twig_func(card.productModificationReference~'_render') }}

            {{ card.productOfferValue|call_twig_func(card.productOfferReference~'_render') }}

            {{ (card.productModificationPostfix ?: card.productVariationPostfix ?: card.productOfferPostfix ?: null )|replace({ '/': '-' }) }}",
        "description": "{{ card.productPreview|striptags|raw }}",
        "url": "{{ absolute_url(' ') }} ",
        "image":[
        {% for key, photo in photos %}

            {# Обложка #}
            {% if photo.product_img_ext is defined and photo.product_img_ext is not null %}
                {% set image_path = cdn_image_path(photo.product_img, photo.product_img_ext, photo.product_img_cdn , 'medium') %}
            {% endif %}

          "{{ image_path }}"
        {% endfor %}
        ],
        "offers": {
            "@type": "AggregateOffer",
            "Price": "{{ money(Price, card.productCurrency) }}",
            "priceCurrency": "RUB",
            "availability": "https://schema.org/InStock"
          }
        }
    </script>



    <meta property="og:type" content="product.item"/>
    <meta property="og:title"
          content="{{ card.productName }} {{ card.productVariationValue|call_twig_func(card.productVariationReference~'_render')
          ~ card.productModificationValue|call_twig_func(card.productModificationReference~'_render') }}

            {{ card.productOfferValue|call_twig_func(card.productOfferReference~'_render') }}

            {{ (card.productModificationPostfix ?: card.productVariationPostfix ?: card.productOfferPostfix ?: null )|replace({ '/': '-' }) }}"/>
    <meta property="og:description" content="{{ card.productPreview|striptags|raw }}"/>
    <meta property="og:url" content="{{ absolute_url(' ') }}"/>

    {% for key, photo in photos|slice(0, 3) %}
        {% if photo.product_img_ext is defined and photo.product_img_ext is not null %}
            {% set image_path = cdn_image_path(photo.product_img, photo.product_img_ext, photo.product_img_cdn , 'medium') %}
            <meta property="og:image" content="{{ image_path }}"/>
            <meta property="og:image:width" content="1200"/>
            <meta property="og:image:height" content="630"/>
        {% endif %}
    {% endfor %}

    <meta property="product:price:amount" content="{{ money(Price, card.productCurrency) }}"/>
    <meta property="product:price:currency" content="RUB"/>
    <meta property="product:availability" content="in stock"/>


    <meta name="twitter:card" content="product"/>
    <meta name="twitter:title"
          content="{{ card.productName }} {{ card.productVariationValue|call_twig_func(card.productVariationReference~'_render')
          ~ card.productModificationValue|call_twig_func(card.productModificationReference~'_render') }}

            {{ card.productOfferValue|call_twig_func(card.productOfferReference~'_render') }}

            {{ (card.productModificationPostfix ?: card.productVariationPostfix ?: card.productOfferPostfix ?: null )|replace({ '/': '-' }) }}"/>
    <meta name="twitter:description" content="{{ card.productPreview|striptags|raw }}"/>
    <meta name="twitter:url" content="{{ absolute_url(' ') }}"/>

    {% if photos|length > 0 and photos[0].product_img_ext is defined %}
        {% set first_image = cdn_image_path(photos[0].product_img, photos[0].product_img_ext, photos[0].product_img_cdn , 'medium') %}
        <meta name="twitter:image" content="{{ first_image }}"/>
    {% endif %}

    <meta name="twitter:label1" content="Цена"/>
    <meta name="twitter:data1" content="{{ money(Price, card.productCurrency) }} ₽"/>
    <meta name="twitter:label2" content="Наличие"/>
    <meta name="twitter:data2" content="В наличии"/>

{% endblock %}

{% block stylesheets %}
    <link href="/assets/plugins/nice-select2/nice-select2.min.css" rel="stylesheet">
{% endblock %}

{% block content %}

    {{ include(_self|replace({ "template.html.twig" : baks_settings.device~"/content.html.twig" })) }}

{% endblock %}

{% block javascript %}
<script nonce='{{ csp_nonce() }}'  data-src='/assets/plugins/nice-select2/nice-select2.min.js?v={{ version }}' class='lazy'></script>

<script nonce="{{ csp_nonce() }}" data-src="/assets/blackdragon/js/scroll.js" class="lazy"></script>
<script nonce="{{ csp_nonce() }}" data-src="/assets/blackdragon/js/clickOnCarousel.js" class="lazy"></script>

{# Для корзины #}
{# Добавление в коризину из формы #}
<script nonce="{{ csp_nonce() }}" data-src="/assets/orders-order/orders_basket.min.js?v={{ version }}" class='lazy'></script>
{# Редактирование количества товара в форме #}
<script nonce="{{ csp_nonce() }}" data-src="/assets/orders-order/basket_items.min.js?v={{ version }}" class='lazy'></script>
{# Форма добавления в корзину в модальном окне #}
<script nonce="{{ csp_nonce() }}" data-src="/assets/orders-order/modal_basket.min.js?v={{ version }}" class='lazy'></script>

{% endblock %}
